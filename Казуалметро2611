local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\25\80","\167\55\126\220"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,1));return "";else local v101=0;local v102;while true do if (v101==0) then v102=v10(v8(v42,49 -33 ));if v30 then local v120=v13(v102,v30);v30=nil;return v120;else return v102;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v103=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + (2 -1))) ;return v103-(v103%(1 -0)) ;else local v104=0;local v105;while true do if (v104==0) then v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end if (v47==1) then return (v49 * 256) + v48 ;end end end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end local function v35() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (0==v54) then v55=v34();v56=v34();v54=1;end if (v54==2) then v59=v31(v56,21,31);v60=((v31(v56,32)==1) and  -1) or 1 ;v54=3;end if (1==v54) then v57=1;v58=(v31(v56,1,20) * (2^32)) + v55 ;v54=2;end if (3==v54) then if (v59==0) then if (v58==0) then return v60 * 0 ;else local v121=0;while true do if (v121==0) then v59=1;v57=0;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end end end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==0) then v63=nil;if  not v61 then local v115=0;while true do if (v115==0) then v61=v34();if (v61==0) then return "";end break;end end end v62=1;end if (v62==3) then return v14(v64);end if (v62==2) then v64={};for v109=1, #v63 do v64[v109]=v10(v9(v11(v63,v109,v109)));end v62=3;end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=v32();local v80;if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v70[v78]=v80;end v68[3]=v32();for v82=1,v34() do local v83=0;local v84;while true do if (v83==0) then v84=v32();if (v31(v84,1,1)==0) then local v116=v31(v84,2,7 -4 );local v117=v31(v84,4,6);local v118={v33(),v33(),nil,nil};if (v116==(619 -(555 + 64))) then local v122=0;while true do if (v122==0) then v118[3]=v33();v118[4]=v33();break;end end elseif (v116==1) then v118[3]=v34();elseif (v116==2) then v118[3]=v34() -(2^(947 -(857 + 74))) ;elseif (v116==3) then local v133=0;while true do if (v133==0) then v118[3]=v34() -(2^16) ;v118[572 -(367 + 201) ]=v33();break;end end end if (v31(v117,1,928 -(214 + 713) )==(1 + 0)) then v118[2]=v70[v118[2]];end if (v31(v117,2,2)==1) then v118[3]=v70[v118[3]];end if (v31(v117,3,3)==1) then v118[4]=v70[v118[4]];end v65[v82]=v118;end break;end end end for v85=1,v34() do v66[v85-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[1 + 1 ];local v77=v72[3];return function(...) local v87=v75;local v88=v76;local v89=v77;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -(878 -(282 + 595)) ;local v96={};local v97={};for v106=0,v95 do if (v106>=v89) then v93[v106-v89 ]=v94[v106 + 1 ];else v97[v106]=v94[v106 + 1 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do v99=v87[v91];v100=v99[1];if (v100<=51) then if (v100<=25) then if (v100<=12) then if (v100<=5) then if (v100<=(1639 -(1523 + 114))) then if (v100<=0) then do return v97[v99[2]];end elseif (v100==1) then v97[v99[2 + 0 ]]=v73[v99[3]];else local v189=0;local v190;local v191;local v192;while true do if (v189==0) then v190=v99[2];v191={v97[v190](v97[v190 + 1 ])};v189=1;end if (v189==1) then v192=0;for v443=v190,v99[4] do local v444=0;while true do if (v444==0) then v192=v192 + (1 -0) ;v97[v443]=v191[v192];break;end end end break;end end end elseif (v100<=3) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==4) then do return v97[v99[2]];end else local v194=v99[2];v97[v194]=v97[v194](v97[v194 + 1 ]);end elseif (v100<=(1073 -(68 + 997))) then if (v100<=6) then v97[v99[2]]=v74[v99[3]];elseif (v100>(1277 -(226 + 1044))) then v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;else v97[v99[2]]=v74[v99[3]];end elseif (v100<=10) then if (v100>(39 -30)) then v97[v99[119 -(32 + 85) ]]={};else for v342=v99[2],v99[3] do v97[v342]=nil;end end elseif (v100>11) then local v200=0;local v201;while true do if (v200==0) then v201=v99[2];v97[v201](v21(v97,v201 + 1 ,v99[3]));break;end end else v91=v99[3];end elseif (v100<=18) then if (v100<=15) then if (v100<=13) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==14) then local v204=v88[v99[3]];local v205;local v206={};v205=v18({},{[v7("\149\28\23\171\174\38\6","\197\202\67\126")]=function(v344,v345) local v346=v206[v345];return v346[1][v346[2]];end,[v7("\248\251\80\50\76\13\201\192\91\47","\100\167\164\62\87\59")]=function(v347,v348,v349) local v350=0;local v351;while true do if (v350==0) then v351=v206[v348];v351[1][v351[2]]=v349;break;end end end});for v352=1,v99[4] do local v353=0;local v354;while true do if (v353==1) then if (v354[1]==37) then v206[v352-1 ]={v97,v354[3]};else v206[v352-1 ]={v73,v354[3]};end v96[ #v96 + 1 ]=v206;break;end if (0==v353) then v91=v91 + 1 ;v354=v87[v91];v353=1;end end end v97[v99[2]]=v40(v204,v205,v74);else v97[v99[2]]=v97[v99[3]][v97[v99[4]]];end elseif (v100<=16) then local v136=0;local v137;local v138;local v139;local v140;while true do if (v136==2) then for v393=v137,v92 do v140=v140 + 1 ;v97[v393]=v138[v140];end break;end if (v136==1) then v92=(v139 + v137) -1 ;v140=0;v136=2;end if (v136==0) then v137=v99[2];v138,v139=v90(v97[v137](v97[v137 + 1 + 0 ]));v136=1;end end elseif (v100==17) then v97[v99[2]]={};else v97[v99[2]]=v73[v99[3]];end elseif (v100<=21) then if (v100<=19) then v91=v99[3];elseif (v100==20) then v97[v99[2]][v99[3]]=v97[v99[4]];else local v215=0;local v216;local v217;local v218;local v219;while true do if (v215==0) then v216=v99[2];v217,v218=v90(v97[v216](v21(v97,v216 + 1 ,v92)));v215=1;end if (v215==1) then v92=(v218 + v216) -1 ;v219=0;v215=2;end if (v215==2) then for v449=v216,v92 do v219=v219 + 1 ;v97[v449]=v217[v219];end break;end end end elseif (v100<=23) then if (v100>22) then if v97[v99[1 + 1 ]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v97[v99[3]];end elseif (v100>24) then v97[v99[2]]=v99[3];else do return;end end elseif (v100<=38) then if (v100<=31) then if (v100<=28) then if (v100<=26) then v97[v99[959 -(892 + 65) ]]=v40(v88[v99[3]],nil,v74);elseif (v100==27) then if (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v97[v99[2]]<v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=29) then local v143=0;local v144;while true do if (v143==0) then v144=v99[2];do return v21(v97,v144,v92);end break;end end elseif (v100==30) then v97[v99[2]]=v97[v99[3]][v99[4]];else local v226=0;local v227;local v228;local v229;local v230;while true do if (v226==2) then for v452=v227,v92 do local v453=0;while true do if (v453==0) then v230=v230 + 1 ;v97[v452]=v228[v230];break;end end end break;end if (v226==1) then v92=(v229 + v227) -1 ;v230=0;v226=2;end if (v226==0) then v227=v99[2];v228,v229=v90(v97[v227](v97[v227 + 1 ]));v226=1;end end end elseif (v100<=(80 -46)) then if (v100<=32) then local v145=v99[2];local v146=v99[4];local v147=v145 + 2 ;local v148={v97[v145](v97[v145 + 1 ],v97[v147])};for v179=1,v146 do v97[v147 + v179 ]=v148[v179];end local v149=v148[1];if v149 then v97[v147]=v149;v91=v99[5 -2 ];else v91=v91 + 1 ;end elseif (v100==(59 -26)) then local v233=0;local v234;local v235;while true do if (v233==1) then v97[v234 + 1 ]=v235;v97[v234]=v235[v99[4]];break;end if (0==v233) then v234=v99[2];v235=v97[v99[3]];v233=1;end end else local v236=v99[2];v97[v236]=v97[v236](v21(v97,v236 + 1 ,v92));end elseif (v100<=36) then if (v100>35) then local v238=v88[v99[3]];local v239;local v240={};v239=v18({},{[v7("\191\105\73\199\227\7\49","\73\224\54\32\169\135\98")]=function(v357,v358) local v359=v240[v358];return v359[1][v359[2]];end,[v7("\247\244\121\33\67\244\195\204\206\111","\173\168\171\23\68\52\157")]=function(v360,v361,v362) local v363=v240[v361];v363[1][v363[2]]=v362;end});for v365=1,v99[354 -(87 + 263) ] do local v366=0;local v367;while true do if (v366==1) then if (v367[1]==37) then v240[v365-1 ]={v97,v367[3]};else v240[v365-1 ]={v73,v367[3]};end v96[ #v96 + 1 ]=v240;break;end if (0==v366) then v91=v91 + 1 ;v367=v87[v91];v366=1;end end end v97[v99[2]]=v40(v238,v239,v74);else v97[v99[2]]();end elseif (v100==37) then v97[v99[2]]=v97[v99[7 -4 ]];else local v244=0;local v245;local v246;local v247;local v248;while true do if (v244==2) then for v456=v245,v92 do v248=v248 + 1 ;v97[v456]=v246[v248];end break;end if (v244==0) then v245=v99[2];v246,v247=v90(v97[v245](v21(v97,v245 + 1 ,v92)));v244=1;end if (v244==1) then v92=(v247 + v245) -1 ;v248=0;v244=2;end end end elseif (v100<=44) then if (v100<=41) then if (v100<=39) then if (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==40) then v97[v99[2 + 0 ]]=v97[v99[3]]%v99[4] ;else local v251=v99[2];local v252=v97[v251 + 2 ];local v253=v97[v251] + v252 ;v97[v251]=v253;if (v252>(0 -0)) then if (v253<=v97[v251 + (953 -(802 + 150)) ]) then local v459=0;while true do if (v459==0) then v91=v99[3];v97[v251 + 3 ]=v253;break;end end end elseif (v253>=v97[v251 + (2 -1) ]) then local v460=0;while true do if (v460==0) then v91=v99[3];v97[v251 + 3 ]=v253;break;end end end end elseif (v100<=42) then local v150=v99[2];local v151={v97[v150](v97[v150 + 1 ])};local v152=0 -0 ;for v182=v150,v99[4] do local v183=0;while true do if (v183==0) then v152=v152 + 1 ;v97[v182]=v151[v152];break;end end end elseif (v100>43) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];else local v257=0;local v258;while true do if (v257==0) then v258=v99[2];v97[v258]=v97[v258](v21(v97,v258 + 1 ,v92));break;end end end elseif (v100<=(35 + 12)) then if (v100<=(1042 -(915 + 82))) then local v153=0;local v154;while true do if (v153==0) then v154=v99[2];v97[v154]=v97[v154](v97[v154 + 1 ]);break;end end elseif (v100==46) then local v259=0;local v260;local v261;while true do if (v259==1) then v97[v260 + 1 ]=v261;v97[v260]=v261[v97[v99[4]]];break;end if (v259==0) then v260=v99[2];v261=v97[v99[3]];v259=1;end end else v97[v99[2]][v97[v99[8 -5 ]]]=v97[v99[4]];end elseif (v100<=49) then if (v100>48) then v97[v99[2]]=v97[v99[3]] + v99[4] ;else do return v97[v99[2]]();end end elseif (v100>50) then local v265=0;local v266;local v267;local v268;while true do if (v265==1) then v268=0;for v461=v266,v99[4] do local v462=0;while true do if (0==v462) then v268=v268 + 1 ;v97[v461]=v267[v268];break;end end end break;end if (0==v265) then v266=v99[2];v267={v97[v266](v21(v97,v266 + 1 ,v92))};v265=1;end end else local v269=v99[2];do return v21(v97,v269,v92);end end elseif (v100<=77) then if (v100<=64) then if (v100<=57) then if (v100<=(32 + 22)) then if (v100<=52) then v97[v99[2 -0 ]]=v40(v88[v99[3]],nil,v74);elseif (v100>53) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else local v270=v99[2];do return v97[v270](v21(v97,v270 + 1 ,v99[3]));end end elseif (v100<=55) then v97[v99[2]]=v97[v99[3]][v99[4]];elseif (v100>56) then v97[v99[2]]=v97[v99[3]][v97[v99[4]]];elseif  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=(1247 -(1069 + 118))) then if (v100<=58) then local v158=v99[2];do return v97[v158](v21(v97,v158 + 1 ,v99[3]));end elseif (v100>(133 -74)) then v97[v99[2]]= #v97[v99[3]];else local v274=0;local v275;while true do if (v274==0) then v275=v99[2];v97[v275](v97[v275 + 1 ]);break;end end end elseif (v100<=62) then if (v100==61) then v97[v99[2]]=v99[3] + v97[v99[4]] ;else local v277=v99[2];v97[v277]=v97[v277]();end elseif (v100==63) then v97[v99[2]]=v97[v99[6 -3 ]] + v99[4] ;else v97[v99[2]][v99[3]]=v97[v99[4]];end elseif (v100<=70) then if (v100<=67) then if (v100<=65) then v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;elseif (v100>(12 + 54)) then local v282=v99[3 -1 ];local v283=v99[4];local v284=v282 + 2 ;local v285={v97[v282](v97[v282 + 1 ],v97[v284])};for v370=1,v283 do v97[v284 + v370 ]=v285[v370];end local v286=v285[1];if v286 then local v403=0;while true do if (v403==0) then v97[v284]=v286;v91=v99[3];break;end end else v91=v91 + 1 + 0 ;end else local v287=v99[2];v97[v287](v21(v97,v287 + 1 ,v92));end elseif (v100<=68) then v97[v99[2]][v99[794 -(368 + 423) ]]=v99[4];elseif (v100>69) then local v288=0;local v289;local v290;local v291;while true do if (v288==1) then v291=v97[v289 + 2 ];if (v291>0) then if (v290>v97[v289 + 1 ]) then v91=v99[9 -6 ];else v97[v289 + (21 -(10 + 8)) ]=v290;end elseif (v290<v97[v289 + 1 ]) then v91=v99[3];else v97[v289 + 3 ]=v290;end break;end if (v288==0) then v289=v99[2];v290=v97[v289];v288=1;end end else local v292=0;local v293;local v294;local v295;local v296;while true do if (v292==2) then for v463=v293,v92 do local v464=0;while true do if (v464==0) then v296=v296 + 1 ;v97[v463]=v294[v296];break;end end end break;end if (v292==1) then v92=(v295 + v293) -1 ;v296=0;v292=2;end if (v292==0) then v293=v99[2];v294,v295=v90(v97[v293](v21(v97,v293 + 1 ,v99[3])));v292=1;end end end elseif (v100<=73) then if (v100<=71) then v74[v99[3]]=v97[v99[2]];elseif (v100==72) then do return v97[v99[2]]();end else v97[v99[2]]=v97[v99[3]]%v99[4] ;end elseif (v100<=75) then if (v100>74) then v97[v99[2]]=v99[3] + v97[v99[4]] ;else do return;end end elseif (v100==76) then v97[v99[7 -5 ]][v99[3]]=v99[446 -(416 + 26) ];else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=90) then if (v100<=83) then if (v100<=80) then if (v100<=(248 -170)) then v97[v99[2]]=v99[3];elseif (v100>79) then local v302=v99[2];do return v21(v97,v302,v302 + v99[3] );end else local v303=0;local v304;while true do if (v303==0) then v304=v99[2];v97[v304]=v97[v304](v21(v97,v304 + 1 ,v99[3]));break;end end end elseif (v100<=81) then local v166=0;local v167;local v168;local v169;while true do if (v166==1) then v169=v97[v167 + 2 ];if (v169>(0 + 0)) then if (v168>v97[v167 + 1 ]) then v91=v99[3];else v97[v167 + 3 ]=v168;end elseif (v168<v97[v167 + 1 ]) then v91=v99[3];else v97[v167 + (4 -1) ]=v168;end break;end if (v166==0) then v167=v99[2];v168=v97[v167];v166=1;end end elseif (v100>82) then if (v97[v99[440 -(145 + 293) ]]<v99[4]) then v91=v91 + 1 ;else v91=v99[3];end else local v305=0;local v306;while true do if (v305==0) then v306=v99[2];v97[v306](v21(v97,v306 + (431 -(44 + 386)) ,v92));break;end end end elseif (v100<=86) then if (v100<=(1570 -(998 + 488))) then local v170=0;local v171;local v172;while true do if (1==v170) then v97[v171 + 1 + 0 ]=v172;v97[v171]=v172[v99[4]];break;end if (v170==0) then v171=v99[1 + 1 ];v172=v97[v99[3]];v170=1;end end elseif (v100==85) then local v307=0;local v308;while true do if (v307==0) then v308=v99[2];v97[v308]=v97[v308]();break;end end else local v309=0;local v310;local v311;while true do if (v309==0) then v310=v99[2];v311=v97[v99[3]];v309=1;end if (v309==1) then v97[v310 + (773 -(201 + 571)) ]=v311;v97[v310]=v311[v97[v99[1142 -(116 + 1022) ]]];break;end end end elseif (v100<=88) then if (v100>87) then local v312=v99[2];v97[v312]=v97[v312](v21(v97,v312 + 1 ,v99[3]));else local v314=0;local v315;local v316;while true do if (v314==0) then v315=v99[2];v316=v97[v315];v314=1;end if (1==v314) then for v465=v315 + (4 -3) ,v92 do v15(v316,v97[v465]);end break;end end end elseif (v100==(53 + 36)) then local v317=0;local v318;local v319;while true do if (0==v317) then v318=v99[2];v319=v97[v318];v317=1;end if (v317==1) then for v466=v318 + 1 ,v92 do v15(v319,v97[v466]);end break;end end else for v381=v99[2],v99[3] do v97[v381]=nil;end end elseif (v100<=97) then if (v100<=93) then if (v100<=91) then local v173=v99[2];local v174,v175=v90(v97[v173](v21(v97,v173 + 1 ,v99[3])));v92=(v175 + v173) -1 ;local v176=0;for v184=v173,v92 do v176=v176 + 1 ;v97[v184]=v174[v176];end elseif (v100>92) then local v320=v99[2];v97[v320](v97[v320 + 1 ]);else v97[v99[2]]=v99[3]~=0 ;end elseif (v100<=(346 -251)) then if (v100>94) then local v322=v99[2];local v323={};for v383=1, #v96 do local v384=0;local v385;while true do if (0==v384) then v385=v96[v383];for v478=0, #v385 do local v479=v385[v478];local v480=v479[1];local v481=v479[2];if ((v480==v97) and (v481>=v322)) then v323[v481]=v480[v481];v479[1]=v323;end end break;end end end else v97[v99[2]]();end elseif (v100==96) then v97[v99[2]][v97[v99[10 -7 ]]]=v99[4];else v97[v99[2]]=v99[3]~=(859 -(814 + 45)) ;end elseif (v100<=100) then if (v100<=98) then local v177=0;local v178;while true do if (v177==0) then v178=v99[2];v97[v178](v21(v97,v178 + 1 ,v99[3]));break;end end elseif (v100==99) then v97[v99[2]][v97[v99[7 -4 ]]]=v99[4];elseif v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=102) then if (v100==101) then local v329=v99[2];local v330={};for v387=1, #v96 do local v388=0;local v389;while true do if (v388==0) then v389=v96[v387];for v482=0, #v389 do local v483=0;local v484;local v485;local v486;while true do if (v483==1) then v486=v484[2];if ((v485==v97) and (v486>=v329)) then v330[v486]=v485[v486];v484[1]=v330;end break;end if (v483==0) then v484=v389[v482];v485=v484[1 + 0 ];v483=1;end end end break;end end end else local v331=v99[2];local v332=v97[v331 + 2 ];local v333=v97[v331] + v332 ;v97[v331]=v333;if (v332>0) then if (v333<=v97[v331 + 1 ]) then v91=v99[3];v97[v331 + 3 ]=v333;end elseif (v333>=v97[v331 + 1 + 0 ]) then local v471=0;while true do if (v471==0) then v91=v99[3];v97[v331 + 3 ]=v333;break;end end end end elseif (v100>103) then v74[v99[3]]=v97[v99[2]];else local v337=v99[2];local v338={v97[v337](v21(v97,v337 + 1 ,v92))};local v339=0;for v390=v337,v99[4] do v339=v339 + 1 ;v97[v390]=v338[v339];end end v91=v91 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- 
--WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
